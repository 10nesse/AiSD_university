# -*- coding: utf-8 -*-
"""homework_2_03_2023.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ha65cTgzXrBLRLOVI5vN8UKlYz26q018

ВЕДОМОСТЬ
"""

class Gradebook:
    subjects = ['Математика', 'Физика', 'Информатика', 'Химия', 'Биология']

    def __init__(self, subject, group):
        self.subject = subject
        self.group = group
        self.students = {} # словарь для хранения информации об оценках студентов

    def put(self, surname, mark):
        marks = ['отлично', 'хорошо', 'удовл.', 'неудовл.', 'н/я']
        if mark not in marks:
            print('Ошибка: Оценка должна быть отлично, хорошо, удовл., неудовл. или н/я')
            return
        self.students[surname] = mark # добавление в словарь 'self.students' студента и его оценку

    def get(self, surname):
        result = self.students.get(surname, 'Студент не найден')
        print(f'Оценка студента {surname}: {result}')
        return result

    def change(self, surname, mark): 
        if surname not in self.students:
            print('Ошибка: Студент не найден')
            return
        self.students[surname] = mark

    def delete(self, surname):
        if surname not in self.students:
            print('Ошибка: Студент не найден')
            return
        del self.students[surname]

    def result(self):
        marks_count = [0, 0, 0, 0, 0]
        for mark in self.students.values():
            if mark == 'отлично':
                marks_count[0] += 1
            elif mark == 'хорошо':
                marks_count[1] += 1
            elif mark == 'удовл.':
                marks_count[2] += 1
            elif mark == 'неудовл.':
                marks_count[3] += 1
            elif mark == 'н/я':
                marks_count[4] += 1
        return tuple(marks_count)

    def __str__(self):
        header = f'Дисциплина: {self.subject}, Группа: {self.group}\n'
        table = 'Фамилия\tОценка\n'
        for surname, mark in self.students.items():
            table += f'{surname}\t{mark}\n'
        return header + table

# создаем объект класса Gradebook
gb = Gradebook('Информатика', 'ПИ22-3')

# добавляем оценки студентов
gb.put('Маширов', 'отлично')
gb.put('Трунов', 'хорошо')
gb.put('Исмаилов', 'удовл.')
gb.put('Клявляев', 'неудовл.')
gb.put('Прозоров', 'н/я')

# выводим информацию об оценках всех студентов
print(gb)

# выводим оценку конкретного студента
gb.get('Прозоров')

# изменяем оценку студента
gb.change('Трунов', 'отлично')

# удаляем студента из журнала
gb.delete('Исмаилов')

# выводим информацию об оценках всех студентов
print(gb)

# выводим количество студентов с каждой оценкой
print(gb.result())